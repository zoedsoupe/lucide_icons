name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: dev
    strategy:
      matrix:
        otp: [27.3]
        elixir: [1.19.0-rc.0]
    steps:
      - uses: actions/checkout@v4
      
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache Elixir deps
        uses: actions/cache@v4
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.MIX_ENV }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Cache Elixir _build
        uses: actions/cache@v4
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ env.MIX_ENV }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('priv/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.MIX_ENV }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}-
            ${{ runner.os }}-build-${{ env.MIX_ENV }}-${{ matrix.otp }}-${{ matrix.elixir }}-

      - name: Install deps
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only ${{ env.MIX_ENV }}

      - name: Compile deps
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: mix deps.compile --warnings-as-errors

      - name: Run compiler checks
        run: mix clean && mix compile --force --warning-as-errors

      - name: Run formatter check
        run: mix format --check-formatted

  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
    strategy:
      matrix:
        otp: [27.3]
        elixir: [1.19.0-rc.0]
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache Elixir deps
        uses: actions/cache@v4
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.MIX_ENV }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Cache Elixir _build
        uses: actions/cache@v4
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ env.MIX_ENV }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('priv/package-lock.json') }}

      - name: Install deps
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only ${{ env.MIX_ENV }}

      - name: Compile deps
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: mix deps.compile --warnings-as-errors

      - name: Compile app
        run: |
          mix clean
          mix compile --force --warnings-as-errors

      - name: Run tests
        run: mix test
